{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-validation-handling\";\nconst _c0 = [\"form\"];\nexport class AppComponent {\n  constructor(ngxValidationHandlingService) {\n    this.ngxValidationHandlingService = ngxValidationHandlingService;\n  }\n  ngAfterViewInit() {\n    this.ngxValidationHandlingService.setValidationHandling(this.form, {\n      required: 'This field is required',\n      minlength: 'Minimum length should be 3',\n      maxlength: 'Maximum length should be 10'\n    });\n  }\n  submit(f) {\n    if (this.form.valid) {\n      console.log(this.form.value);\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.NgxValidationHandlingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {},\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","ngxValidationHandlingService","ngAfterViewInit","setValidationHandling","form","required","minlength","maxlength","submit","f","valid","console","log","value","_","i0","ɵɵdirectiveInject","i1","NgxValidationHandlingService","_2","selectors","viewQuery","AppComponent_Query","rf","ctx"],"sources":["D:\\MyProjects\\ngx-validation-handling\\projects\\demo-app\\src\\app\\app.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\r\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import {NgxValidationHandlingService} from 'ngx-validation-handling';\r\n// import { ValidationErrorHandler } from 'projects/ngx-validation-handling/src/lib/interfaces/Validation-error-handler.interface';\r\n// @Component({\r\n//   selector: 'app-root',\r\n//   templateUrl: './app.component.html',\r\n//   styleUrls: ['./app.component.scss']\r\n// })\r\n// export class AppComponent {\r\n//   form!:FormGroup;\r\n//   constructor(private fb:FormBuilder, private ngxValidationHandlingService:NgxValidationHandlingService){}\r\n//   ngOnInit(): void {\r\n//   this.form =  this.fb.group({\r\n//       fName:['',[Validators.required,Validators.minLength(3),Validators.maxLength(10)]],\r\n//       lName:['',[Validators.required,Validators.minLength(3),Validators.maxLength(10)]]\r\n//    })\r\n//     this.ngxValidationHandlingService.setValidationHandling(this.form,\r\n//       {\r\n//         required: 'This field is required',\r\n//         minlength: 'Minimum length should be 3',\r\n//         maxlength: 'Maximum length should be 10'\r\n//       }\r\n//     );\r\n//   }\r\n//   customErrorHandler(controlName: string, errorName: string, errorValue: any): string {\r\n//     if (errorName === 'required') {\r\n//       return 'cccc';\r\n//     }\r\n//     if (errorName === 'minlength') {\r\n//       return 'Minimum length should be 3';\r\n//     }\r\n//     if (errorName === 'maxlength') {\r\n//       return 'Maximum length should be 10';\r\n//     }\r\n//     return '';\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n/////////////////\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, NgForm } from \"@angular/forms\";\r\nimport { NgxValidationHandlingService } from \"ngx-validation-handling\";\r\n @Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n  })\r\nexport class AppComponent {\r\n  @ViewChild('form') form!:NgForm;\r\n  constructor(private ngxValidationHandlingService:NgxValidationHandlingService){}\r\n  ngAfterViewInit(): void {\r\n    this.ngxValidationHandlingService.setValidationHandling(this.form,\r\n      {\r\n        required: 'This field is required',\r\n        minlength: 'Minimum length should be 3',\r\n        maxlength: 'Maximum length should be 10'\r\n      }\r\n    );\r\n    \r\n  }\r\n  submit(f:NgForm){\r\n    if(this.form.valid){\r\n\r\n      console.log(this.form.value)\r\n    }\r\n  }\r\n}"],"mappings":";;;AAsDA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,4BAAyD;IAAzD,KAAAA,4BAA4B,GAA5BA,4BAA4B;EAA+B;EAC/EC,eAAeA,CAAA;IACb,IAAI,CAACD,4BAA4B,CAACE,qBAAqB,CAAC,IAAI,CAACC,IAAI,EAC/D;MACEC,QAAQ,EAAE,wBAAwB;MAClCC,SAAS,EAAE,4BAA4B;MACvCC,SAAS,EAAE;KACZ,CACF;EAEH;EACAC,MAAMA,CAACC,CAAQ;IACb,IAAG,IAAI,CAACL,IAAI,CAACM,KAAK,EAAC;MAEjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC;;EAEhC;EAAC,QAAAC,CAAA,G;qBAlBUf,YAAY,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,4BAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZpB,YAAY;IAAAqB,SAAA;IAAAC,SAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}