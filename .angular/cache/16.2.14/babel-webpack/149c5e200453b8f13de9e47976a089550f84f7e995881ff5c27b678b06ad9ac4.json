{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-validation-handling\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nconst _c1 = function () {\n  return {\n    color: \"black\"\n  };\n};\nexport class AppComponent {\n  constructor(ngxValidationHandlingService) {\n    this.ngxValidationHandlingService = ngxValidationHandlingService;\n  }\n  ngAfterViewInit() {\n    this.ngxValidationHandlingService.setValidationHandling(this.form, {\n      email: 'Please enter a valid email address',\n      required: 'This field is required',\n      minlength: 'Minimum length should be 3',\n      maxlength: 'Maximum length should be 10'\n    });\n  }\n  submit(f) {\n    if (this.form.valid) {\n      console.log(this.form.value);\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.NgxValidationHandlingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"w-50\", \"m-auto\", \"mt-5\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\", \"mb-2\"], [\"customErrorMessage\", \"fName is GG\", \"className\", \"sss\", \"controlName\", \"fName\"], [\"name\", \"fName\", \"ngModel\", \"\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"10\", \"email\", \"\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"controlName\", \"lName\"], [\"name\", \"lName\", \"ngModel\", \"\", \"required\", \"\", \"minlength\", \"3\", \"maxlength\", \"10\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.submit(_r0));\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"ngx-validation-handling\", 4)(5, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"ngx-validation-handling\", 6)(8, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵtext(10, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(2, _c1));\n      }\n    },\n    dependencies: [i1.NgxValidationHandlingComponent, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.EmailValidator, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","ngxValidationHandlingService","ngAfterViewInit","setValidationHandling","form","email","required","minlength","maxlength","submit","f","valid","console","log","value","_","i0","ɵɵdirectiveInject","i1","NgxValidationHandlingService","_2","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵstyleMap","ɵɵpureFunction0","_c1"],"sources":["D:\\MyProjects\\ngx-validation-handling\\projects\\demo-app\\src\\app\\app.component.ts","D:\\MyProjects\\ngx-validation-handling\\projects\\demo-app\\src\\app\\app.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\r\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import {NgxValidationHandlingService} from 'ngx-validation-handling';\r\n// import { ValidationErrorHandler } from 'projects/ngx-validation-handling/src/lib/interfaces/Validation-error-handler.interface';\r\n// @Component({\r\n//   selector: 'app-root',\r\n//   templateUrl: './app.component.html',\r\n//   styleUrls: ['./app.component.scss']\r\n// })\r\n// export class AppComponent {\r\n//   form!:FormGroup;\r\n//   constructor(private fb:FormBuilder, private ngxValidationHandlingService:NgxValidationHandlingService){}\r\n//   ngOnInit(): void {\r\n//   this.form =  this.fb.group({\r\n//       fName:['',[Validators.required,Validators.minLength(3),Validators.maxLength(10)]],\r\n//       lName:['',[Validators.required,Validators.minLength(3),Validators.maxLength(10)]]\r\n//    })\r\n//     this.ngxValidationHandlingService.setValidationHandling(this.form,\r\n//       {\r\n//         required: 'This field is required',\r\n//         minlength: 'Minimum length should be 3',\r\n//         maxlength: 'Maximum length should be 10'\r\n//       }\r\n//     );\r\n//   }\r\n//   customErrorHandler(controlName: string, errorName: string, errorValue: any): string {\r\n//     if (errorName === 'required') {\r\n//       return 'cccc';\r\n//     }\r\n//     if (errorName === 'minlength') {\r\n//       return 'Minimum length should be 3';\r\n//     }\r\n//     if (errorName === 'maxlength') {\r\n//       return 'Maximum length should be 10';\r\n//     }\r\n//     return '';\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n/////////////////\r\n\r\nimport { Component } from '@angular/core';\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, NgForm } from \"@angular/forms\";\r\nimport { NgxValidationHandlingService } from \"ngx-validation-handling\";\r\n @Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n  })\r\nexport class AppComponent {\r\n  @ViewChild('form') form!:NgForm;\r\n  constructor(private ngxValidationHandlingService:NgxValidationHandlingService){}\r\n  ngAfterViewInit(): void {\r\n    this.ngxValidationHandlingService.setValidationHandling(this.form,\r\n      {\r\n        email: 'Please enter a valid email address',\r\n        required: 'This field is required',\r\n        minlength: 'Minimum length should be 3',\r\n        maxlength: 'Maximum length should be 10'\r\n      }\r\n    );\r\n    \r\n  }\r\n  submit(f:NgForm){\r\n    if(this.form.valid){\r\n\r\n      console.log(this.form.value)\r\n    }\r\n  }\r\n}","<!-- \r\n<div class=\"w-50 m-auto mt-5\">\r\n<form [formGroup]=\"form\">\r\n  <div class=\"form-group mb-2\">\r\n    <ngx-validation-handling [customErrorHandler]=\"customErrorHandler\" fieldName=\"red\" controlName=\"fName\"></ngx-validation-handling>\r\n    <input formControlName=\"fName\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\r\n  </div>\r\n  <div class=\"form-group mb-2\">\r\n    <ngx-validation-handling controlName=\"lName\"></ngx-validation-handling>\r\n    <input formControlName=\"lName\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n</div> -->\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"w-50 m-auto mt-5\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\">\r\n    <div class=\"form-group mb-2\">\r\n      <ngx-validation-handling customErrorMessage=\"fName is GG\" className=\"sss\" controlName=\"fName\" [style]=\"{color:'black'}\"></ngx-validation-handling>\r\n      <input\r\n        name=\"fName\"\r\n        ngModel\r\n        required\r\n        minlength=\"3\"\r\n        maxlength=\"10\"\r\n        email\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputEmail1\"\r\n        aria-describedby=\"emailHelp\"\r\n        placeholder=\"Enter email\">\r\n \r\n    </div>\r\n    <div class=\"form-group mb-2\">\r\n      <ngx-validation-handling controlName=\"lName\"></ngx-validation-handling>\r\n      <input\r\n        name=\"lName\"\r\n        ngModel\r\n        required\r\n        minlength=\"3\"\r\n        maxlength=\"10\"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        id=\"exampleInputPassword1\"\r\n        placeholder=\"Password\">\r\n\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>"],"mappings":";;;;;;;;;AAsDA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,4BAAyD;IAAzD,KAAAA,4BAA4B,GAA5BA,4BAA4B;EAA+B;EAC/EC,eAAeA,CAAA;IACb,IAAI,CAACD,4BAA4B,CAACE,qBAAqB,CAAC,IAAI,CAACC,IAAI,EAC/D;MACEC,KAAK,EAAE,oCAAoC;MAC3CC,QAAQ,EAAE,wBAAwB;MAClCC,SAAS,EAAE,4BAA4B;MACvCC,SAAS,EAAE;KACZ,CACF;EAEH;EACAC,MAAMA,CAACC,CAAQ;IACb,IAAG,IAAI,CAACN,IAAI,CAACO,KAAK,EAAC;MAEjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,IAAI,CAACU,KAAK,CAAC;;EAEhC;EAAC,QAAAC,CAAA,G;qBAnBUhB,YAAY,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,4BAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZrB,YAAY;IAAAsB,SAAA;IAAAC,SAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;QCnCzBR,EAAA,CAAAU,cAAA,aAA8B;QACPV,EAAA,CAAAW,UAAA,sBAAAC,+CAAA;UAAAZ,EAAA,CAAAa,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAf,EAAA,CAAAgB,WAAA;UAAA,OAAYhB,EAAA,CAAAiB,WAAA,CAAAR,GAAA,CAAAhB,MAAA,CAAAsB,GAAA,CAAY;QAAA,EAAC;QAC5Cf,EAAA,CAAAU,cAAA,aAA6B;QAC3BV,EAAA,CAAAkB,SAAA,iCAAkJ;QAcpJlB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAU,cAAA,aAA6B;QAC3BV,EAAA,CAAAkB,SAAA,iCAAuE;QAYzElB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAU,cAAA,gBAA8C;QAAAV,EAAA,CAAAoB,MAAA,cAAM;QAAApB,EAAA,CAAAmB,YAAA,EAAS;;;QA7BmCnB,EAAA,CAAAqB,SAAA,GAAyB;QAAzBrB,EAAA,CAAAsB,UAAA,CAAAtB,EAAA,CAAAuB,eAAA,IAAAC,GAAA,EAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}